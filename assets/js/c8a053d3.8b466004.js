"use strict";(self.webpackChunk_inversifyjs_inversify_validation_docs_site=self.webpackChunk_inversifyjs_inversify_validation_docs_site||[]).push([["583"],{2927:function(e,i,n){n.r(i),n.d(i,{frontMatter:()=>t,toc:()=>c,default:()=>j,metadata:()=>a,assets:()=>o,contentTitle:()=>d});var a=JSON.parse('{"id":"ajv/api","title":"API","description":"AjvValidationPipe","source":"@site/docs/ajv/api.mdx","sourceDirName":"ajv","slug":"/ajv/api","permalink":"/validation/docs/ajv/api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"API"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/validation/docs/ajv/introduction"},"next":{"title":"Introduction","permalink":"/validation/docs/class-validator/introduction"}}'),r=n(9970),s=n(7245),l=n(445);let t={sidebar_position:2,title:"API"},d,o={},c=[{value:"AjvValidationPipe",id:"ajvvalidationpipe",level:2},{value:"Example: register an AjvValidationPipe globally",id:"example-register-an-ajvvalidationpipe-globally",level:3},{value:"AjvCompiledValidationPipe",id:"ajvcompiledvalidationpipe",level:2},{value:"Example: register an AjvCompiledValidationPipe globally",id:"example-register-an-ajvcompiledvalidationpipe-globally",level:3},{value:"ValidateAjvSchema",id:"validateajvschema",level:2},{value:"Example: validate request body with JSON Schema",id:"example-validate-request-body-with-json-schema",level:3},{value:"JSON Schema Features",id:"json-schema-features",level:2},{value:"Basic Types",id:"basic-types",level:3},{value:"String Validation",id:"string-validation",level:3},{value:"Number Validation",id:"number-validation",level:3},{value:"Array Validation",id:"array-validation",level:3},{value:"Object Validation",id:"object-validation",level:3},{value:"Advanced Features",id:"advanced-features",level:3},{value:"Error Handling",id:"error-handling",level:3}];function h(e){let i={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"ajvvalidationpipe",children:"AjvValidationPipe"}),"\n",(0,r.jsx)(i.p,{children:"Validates values using Ajv JSON Schema validator. Register it globally to validate incoming HTTP parameters (e.g., body) in your controllers."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"constructor(ajv: Ajv, schemaList?: AnySchema[])\n"})}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ajv"})," (Ajv): The Ajv instance to use for validation. You can configure it with custom formats, keywords, and options."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"schemaList"})," (optional AnySchema[]): One or more JSON schemas applied globally to every validated value. These run before any parameter-level schemas added via ",(0,r.jsx)(i.code,{children:"@ValidateAjvSchema"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"AjvValidationPipe"})," can be registered as a global pipe: ",(0,r.jsx)(i.code,{children:"adapter.useGlobalPipe(new AjvValidationPipe(ajv))"}),".\nThis way, controller parameters decorated with ",(0,r.jsx)(i.code,{children:"@ValidateAjvSchema"})," are automatically validated."]}),"\n",(0,r.jsx)(i.h3,{id:"example-register-an-ajvvalidationpipe-globally",children:"Example: register an AjvValidationPipe globally"}),"\n",(0,r.jsx)(l.A,{language:"ts",children:"import { AjvValidationPipe } from '@inversifyjs/ajv-validation';\nimport { InversifyExpressHttpAdapter } from '@inversifyjs/http-express';\nimport { InversifyValidationErrorFilter } from '@inversifyjs/http-validation';\nimport Ajv from 'ajv';\nimport { Container } from 'inversify';\n\nconst container: Container = new Container();\n\nconst ajv: Ajv = new Ajv();\n\nconst adapter: InversifyExpressHttpAdapter = new InversifyExpressHttpAdapter(\n  container,\n  { logger: true },\n);\nadapter.useGlobalFilters(InversifyValidationErrorFilter);\nadapter.useGlobalPipe(new AjvValidationPipe(ajv));\n"}),"\n",(0,r.jsx)(i.h2,{id:"ajvcompiledvalidationpipe",children:"AjvCompiledValidationPipe"}),"\n",(0,r.jsxs)(i.p,{children:["An optimized version of ",(0,r.jsx)(i.code,{children:"AjvValidationPipe"})," that uses compiled Ajv validation functions for better performance. Best suited for production environments where schemas don't change frequently."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"constructor(ajv: Ajv, schemaList?: AnySchema[])\n"})}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ajv"})," (Ajv): The Ajv instance to use for validation. Schemas must have an ",(0,r.jsx)(i.code,{children:"$id"})," property to be compiled."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"schemaList"})," (optional AnySchema[]): One or more JSON schemas applied globally to every validated value."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Important"}),": When using ",(0,r.jsx)(i.code,{children:"AjvCompiledValidationPipe"}),", all schemas must have an ",(0,r.jsx)(i.code,{children:"$id"})," property. The pipe compiles and caches validation functions for better performance."]}),"\n",(0,r.jsx)(i.h3,{id:"example-register-an-ajvcompiledvalidationpipe-globally",children:"Example: register an AjvCompiledValidationPipe globally"}),"\n",(0,r.jsx)(l.A,{language:"ts",children:"import { AjvCompiledValidationPipe } from '@inversifyjs/ajv-validation';\nimport { InversifyExpressHttpAdapter } from '@inversifyjs/http-express';\nimport { InversifyValidationErrorFilter } from '@inversifyjs/http-validation';\nimport Ajv from 'ajv';\nimport { Container } from 'inversify';\n\nconst container: Container = new Container();\n\nconst ajv: Ajv = new Ajv();\n\nconst adapter: InversifyExpressHttpAdapter = new InversifyExpressHttpAdapter(\n  container,\n  { logger: true },\n);\nadapter.useGlobalFilters(InversifyValidationErrorFilter);\nadapter.useGlobalPipe(new AjvCompiledValidationPipe(ajv));\n"}),"\n",(0,r.jsx)(i.h2,{id:"validateajvschema",children:"ValidateAjvSchema"}),"\n",(0,r.jsxs)(i.p,{children:["Attaches one or more JSON schemas to a specific parameter (e.g., ",(0,r.jsx)(i.code,{children:"@Body()"}),"), so the ",(0,r.jsx)(i.code,{children:"AjvValidationPipe"})," or ",(0,r.jsx)(i.code,{children:"AjvCompiledValidationPipe"})," can validate the value before your controller method runs."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"ValidateAjvSchema(...schemaList: AnySchema[]): ParameterDecorator\n"})}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"schemaList"}),": One or more JSON Schema objects that define the expected structure and constraints for the parameter value."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["When multiple schemas are provided, they run in sequence. The value must pass all schema validations. Any schemas provided to ",(0,r.jsx)(i.code,{children:"AjvValidationPipe"})," run first; parameter-level schemas run afterwards."]}),"\n",(0,r.jsxs)(i.p,{children:["On validation failure, an ",(0,r.jsx)(i.code,{children:"InversifyValidationError"})," is thrown and can be converted to a Bad Request HTTP response by ",(0,r.jsx)(i.code,{children:"ValidationErrorFilter"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"example-validate-request-body-with-json-schema",children:"Example: validate request body with JSON Schema"}),"\n",(0,r.jsx)(l.A,{language:"ts",children:"import { ValidateAjvSchema } from '@inversifyjs/ajv-validation';\nimport { Body, Controller, Post } from '@inversifyjs/http-core';\nimport { AnySchema } from 'ajv';\n\ninterface User {\n  name: string;\n  email: string;\n  age?: number;\n}\n\nconst userSchema: AnySchema = {\n  additionalProperties: false,\n  properties: {\n    age: { minimum: 0, type: 'number' },\n    email: { format: 'email', type: 'string' },\n    name: { minLength: 1, type: 'string' },\n  },\n  required: ['name', 'email'],\n  type: 'object',\n};\n\n@Controller('/users')\nexport class UserController {\n  @Post()\n  public async createUser(\n    @Body()\n    @ValidateAjvSchema(userSchema)\n    user: User,\n  ): Promise<User> {\n    return user;\n  }\n}\n"}),"\n",(0,r.jsx)(i.h2,{id:"json-schema-features",children:"JSON Schema Features"}),"\n",(0,r.jsx)(i.p,{children:"Ajv supports the full JSON Schema specification, including:"}),"\n",(0,r.jsx)(i.h3,{id:"basic-types",children:"Basic Types"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"string"}),", ",(0,r.jsx)(i.code,{children:"number"}),", ",(0,r.jsx)(i.code,{children:"integer"}),", ",(0,r.jsx)(i.code,{children:"boolean"}),", ",(0,r.jsx)(i.code,{children:"array"}),", ",(0,r.jsx)(i.code,{children:"object"}),", ",(0,r.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"string-validation",children:"String Validation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"minLength"}),", ",(0,r.jsx)(i.code,{children:"maxLength"}),": String length constraints"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"pattern"}),": Regular expression validation"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"format"}),": Built-in formats like ",(0,r.jsx)(i.code,{children:"email"}),", ",(0,r.jsx)(i.code,{children:"date"}),", ",(0,r.jsx)(i.code,{children:"uri"}),", etc."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"number-validation",children:"Number Validation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"minimum"}),", ",(0,r.jsx)(i.code,{children:"maximum"}),": Value range constraints"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"multipleOf"}),": Divisibility constraints"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"array-validation",children:"Array Validation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"minItems"}),", ",(0,r.jsx)(i.code,{children:"maxItems"}),": Array length constraints"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"items"}),": Schema for array items"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"uniqueItems"}),": Ensure array elements are unique"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"object-validation",children:"Object Validation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"properties"}),": Define expected object properties"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"required"}),": Specify required properties"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"additionalProperties"}),": Control extra properties"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"minProperties"}),", ",(0,r.jsx)(i.code,{children:"maxProperties"}),": Object size constraints"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"$ref"}),": Schema references and reuse"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"allOf"}),", ",(0,r.jsx)(i.code,{children:"anyOf"}),", ",(0,r.jsx)(i.code,{children:"oneOf"}),": Schema composition"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"if"}),"/",(0,r.jsx)(i.code,{children:"then"}),"/",(0,r.jsx)(i.code,{children:"else"}),": Conditional validation"]}),"\n",(0,r.jsx)(i.li,{children:"Custom keywords and formats"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(i.p,{children:"When validation fails, Ajv provides detailed error information including:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Property path where validation failed"}),"\n",(0,r.jsx)(i.li,{children:"Expected vs actual values"}),"\n",(0,r.jsx)(i.li,{children:"Validation rule that was violated"}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"AjvValidationPipe"})," automatically converts these errors into user-friendly messages that can be returned as HTTP responses."]})]})}function j(e={}){let{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);